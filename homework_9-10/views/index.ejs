<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <link rel="stylesheet" href="/stylesheets/main.css" />
  </head>
  <body>
    <%- include('sections/header', { title: 'User form' }) %>

    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>
    <h2>Задачі:</h2>
    <h3>Урок 9</h3>
    <p>
      Задача 1. Розробити додаток для операцій з товарами (назва, ціна, кількість) з такими маршрутами:
      /products – відображаємо список товарів, 
      /login – при авторизації додаємо до сесії ім’я користувача і переходимо до сторінки «products» (при цьому товари відображаються у порядку зростання ціни),
      /addProduct– додаємо товар і переходимо на сторінку «products» (при цьому товари відображаються у порядку спадання ціни)
      Подумайте як передати інформацію про сортування товарів при переході на сторінку «/products»
    </p>
      <p>Задача 2. Розробіть веб-додаток для управління курсами та студентами. У базі даних будуть дві основні моделі: Course (курс: назва курсу, тривалість, список студентів) та Student (студент: ім’я, вік, середній бал). Кожен курс може мати список студентів (кілька студентів). Курс також може містити масив семінарів, які проводять студенти (кожен семінар є об'єктом з полями: тема семінару, відповідальний студент, тривалість семінару).</p>
      <h3>Урок 10</h3>
      <p>
        Задача. У будь-якому з ваших проєктів: <br>
        1)Структрувати проєкт (винести окремі секції app.mjs у окремі розділи і модулі за зразком на лекції) <br>
        2)додати автентифікацію з використанням модуля  Password
      </p>
      <ul>
        <li><b>User</b>: admin, <br> <b>password</b>: 654321 <br> <b>userType</b>: admin</li>
        <li><b>User</b>: admin, <br> <b>password</b>: s123456, <br> <b>userType</b>: manager</li>
        <li><b>User</b>: admin, <br> <b>password</b>: m123456, <br> <b>userType</b>: guest</li>
      </ul>
  </body>
</html>
